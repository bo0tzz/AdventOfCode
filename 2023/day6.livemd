# AoC 2023 Day 6

```elixir
Mix.install([
  {:kino_aoc, "~> 0.1.5"}
])
```

## Input

<!-- livebook:{"attrs":{"assign_to":"puzzle_input","day":"6","session_secret":"AOC_COOKIE_SECRET","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2023", "6", System.fetch_env!("LB_AOC_COOKIE_SECRET"))
```

```elixir
[times, distances] = String.split(puzzle_input, "\n")

[_ | str_times] = String.split(times)
[_ | str_distances] = String.split(distances)

times = Enum.map(str_times, &String.to_integer/1)
distances = Enum.map(str_distances, &String.to_integer/1)

races = Enum.zip(times, distances)
```

## Part 1

The problem can be reduced to a quadratic inequality:

$$
\begin{cases}
distance(x) = -x^2 + tx \\
distance(x) > m
\end{cases}
$$

We don't care about all the numbers, just the range higher than the minimal distance m. We can calculate the intersection points with m using the quadratic formula:

$$
x = \frac{-t \pm \sqrt{t^2-4m}}{-2}
$$

In some cases, the intersection lands exactly so that $distance(x) = m$. Since we need to complete $distance \gt m$, we special case that to return $x + 1$.

```elixir
defmodule Race do
  def distance(h, t) do
    -(h * h) + t * h
  end

  def calculate(:low, t, m) do
    h = (-t + :math.sqrt(t * t - 4 * m)) / -2

    case round(distance(h, t)) do
      ^m -> h + 1
      _ -> h
    end
  end

  def calculate(:high, t, m) do
    h = (-t - :math.sqrt(t * t - 4 * m)) / -2

    case round(distance(h, t)) do
      ^m -> h - 1
      _ -> h
    end
  end

  def range({t, m}) do
    low = calculate(:low, t, m) |> :math.floor()
    high = calculate(:high, t, m) |> :math.ceil()
    {low, high}
  end

  def option_count(race) do
    {low, high} = range(race)
    round(high - low + 1)
  end
end
```

```elixir
races
|> Enum.map(&Race.option_count/1)
|> Enum.product()
```

## Part 2

```elixir
race = {
  str_times |> Enum.join() |> String.to_integer(),
  str_distances |> Enum.join() |> String.to_integer()
}

Race.option_count(race)
```

<!-- livebook:{"offset":2071,"stamp":{"token":"XCP.IeYfSKTbpq1QVQbo4T4L9DXbk56DLDBvu1Vtq59ZS9x6DUFW_EF4LjOabMdKEV_9FZfeZ2y-dmMpe_RAhPmr8wT9iBA146koPAjRHA6kCm4IF7ZkuwOkYwGbTNM","version":2}} -->
